<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<http pattern="/static/**" security="none"/>
	<http use-expressions="true">

		<intercept-url pattern="/admin**" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/welcome**" access="hasRole('ROLE_USER')" />

		<!-- access denied page -->
		<access-denied-handler error-page="/403" />

		<form-login
				login-page="/login"
				default-target-url="/welcome"
				authentication-failure-url="/login?error"
				username-parameter="username"
				password-parameter="password" />
		<logout logout-success-url="/login?logout"  />
		<!-- enable csrf protection -->
		<csrf/>
		<headers/>
	</http>


	<authentication-manager>
		<authentication-provider ref="authProvider" />
	</authentication-manager>

	<beans:bean id="authProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<beans:property name="userDetailsService" ref="userService" />
		<beans:property name="passwordEncoder" ref="encoder" />
	</beans:bean>

	<jdbc-user-service id="userService" data-source-ref="dataSource"
					   users-by-username-query="select username,password, enabled from users where username=?"
					   authorities-by-username-query="select username, authority from authorities where username =?" />

	<beans:bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

    <!--
    <beans:bean id="shaEncoder" class="org.springframework.security.crypto.password.StandardPasswordEncoder" />
    -->

</beans:beans>